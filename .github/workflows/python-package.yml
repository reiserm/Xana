# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest,macos-10.15]
        python-version: [3.7,]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install gfortran for Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install gfortran

    - name: Symlink gfortran for MacOS
      if: matrix.os == 'macos-10.15'
      run: ln -s /usr/local/bin/gfortran-9 /usr/local/bin/gfortran

    - name: Check gfortran version
      run: gfortran --version

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install .[test]

#     - name: Test with pytest
#       run: |
#         pytest

    - name: Import test
      run: |
        cd `mktemp -d` # Otherwise import is relative instead of from installed
        python -c "import Xana.XpcsAna.cpy_ecorr"

    - name: Test notebook execution
      run: |
        pytest --cov=./ --nbval ./docs/source/XPCS_Example.ipynb --verbose --sanitize-with ./docs/source/doc_sanitize.cfg

    - name: Upload Codecov
      uses: codecov/codecov-action@v1

#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
